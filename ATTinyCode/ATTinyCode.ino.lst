
C:\Users\LENOVO~1\AppData\Local\Temp\arduino_build_321950/ATTinyCode.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
   0:	17 c0       	rjmp	.+46     	; 0x30 <__ctors_end>
   2:	26 c0       	rjmp	.+76     	; 0x50 <__bad_interrupt>
   4:	25 c0       	rjmp	.+74     	; 0x50 <__bad_interrupt>
   6:	24 c0       	rjmp	.+72     	; 0x50 <__bad_interrupt>
   8:	23 c0       	rjmp	.+70     	; 0x50 <__bad_interrupt>
   a:	4a c0       	rjmp	.+148    	; 0xa0 <__vector_5>
   c:	21 c0       	rjmp	.+66     	; 0x50 <__bad_interrupt>
   e:	20 c0       	rjmp	.+64     	; 0x50 <__bad_interrupt>
  10:	1f c0       	rjmp	.+62     	; 0x50 <__bad_interrupt>
  12:	1e c0       	rjmp	.+60     	; 0x50 <__bad_interrupt>
  14:	1d c0       	rjmp	.+58     	; 0x50 <__bad_interrupt>
  16:	1c c0       	rjmp	.+56     	; 0x50 <__bad_interrupt>
  18:	1b c0       	rjmp	.+54     	; 0x50 <__bad_interrupt>
  1a:	1a c0       	rjmp	.+52     	; 0x50 <__bad_interrupt>
  1c:	19 c0       	rjmp	.+50     	; 0x50 <__bad_interrupt>

0000001e <__trampolines_end>:
__trampolines_start():
  1e:	00 00       	nop
  20:	00 00       	nop
  22:	36 00       	.word	0x0036	; ????

00000024 <digital_pin_to_port_PGM>:
  24:	02 02 02 02 02 02                                   ......

0000002a <digital_pin_to_bit_mask_PGM>:
  2a:	01 02 04 08 10 20                                   ..... 

00000030 <__ctors_end>:
__dtors_end():
  30:	11 24       	eor	r1, r1
  32:	1f be       	out	0x3f, r1	; 63
  34:	cf e5       	ldi	r28, 0x5F	; 95
  36:	d2 e0       	ldi	r29, 0x02	; 2
  38:	de bf       	out	0x3e, r29	; 62
  3a:	cd bf       	out	0x3d, r28	; 61

0000003c <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
  3c:	20 e0       	ldi	r18, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
  3e:	a0 e6       	ldi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
  40:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
  42:	01 c0       	rjmp	.+2      	; 0x46 <.do_clear_bss_start>

00000044 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
  44:	1d 92       	st	X+, r1

00000046 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
  46:	af 36       	cpi	r26, 0x6F	; 111
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
  48:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
  4a:	e1 f7       	brne	.-8      	; 0x44 <.do_clear_bss_loop>
.do_clear_bss_start():
  4c:	73 d0       	rcall	.+230    	; 0x134 <main>
  4e:	e0 c0       	rjmp	.+448    	; 0x210 <_exit>

00000050 <__bad_interrupt>:
__vector_1():
  50:	d7 cf       	rjmp	.-82     	; 0x0 <__vectors>

00000052 <digitalWrite.constprop.0>:
digitalWrite.constprop.0():
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:152
  // before doing a digital write.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);

  out = portOutputRegister(port);

  if (val == LOW) {
  52:	81 11       	cpse	r24, r1
  54:	05 c0       	rjmp	.+10     	; 0x60 <digitalWrite.constprop.0+0xe>
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:153
    uint8_t oldSREG = SREG;
  56:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:154
    cli();
  58:	f8 94       	cli
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:155
    *out &= ~bit;
  5a:	c3 98       	cbi	0x18, 3	; 24
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:161
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
    cli();
    *out |= bit;
    SREG = oldSREG;
  5c:	8f bf       	out	0x3f, r24	; 63
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:163
  }
}
  5e:	08 95       	ret
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:158
    uint8_t oldSREG = SREG;
    cli();
    *out &= ~bit;
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
  60:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:159
    cli();
  62:	f8 94       	cli
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:160
    *out |= bit;
  64:	c3 9a       	sbi	0x18, 3	; 24
  66:	fa cf       	rjmp	.-12     	; 0x5c <digitalWrite.constprop.0+0xa>

00000068 <digitalRead>:
digitalRead():
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:169

int digitalRead(uint8_t pin)
{
  if (pin&128) {pin=analogInputToDigitalPin((pin&127));}
  //uint8_t timer = digitalPinToTimer(pin);
  uint8_t bit = digitalPinToBitMask(pin);
  68:	90 e0       	ldi	r25, 0x00	; 0
  6a:	fc 01       	movw	r30, r24
  6c:	e6 5d       	subi	r30, 0xD6	; 214
  6e:	ff 4f       	sbci	r31, 0xFF	; 255
  70:	24 91       	lpm	r18, Z
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:170
  uint8_t port = digitalPinToPort(pin);
  72:	fc 01       	movw	r30, r24
  74:	ec 5d       	subi	r30, 0xDC	; 220
  76:	ff 4f       	sbci	r31, 0xFF	; 255
  78:	e4 91       	lpm	r30, Z
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:172

  if (port == NOT_A_PIN) return LOW;
  7a:	ee 23       	and	r30, r30
  7c:	71 f0       	breq	.+28     	; 0x9a <digitalRead+0x32>
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:180
  // "read" should *NEVER* change the behavior of the thing you're using it on.
  // That's why it's called "read" not "write". As an added bonus, sets the
  // stage for auto-fast-digitalRead() for compile time known pins.
  // if (timer != NOT_ON_TIMER) turnOffPWM(timer);

  if (*portInputRegister(port) & bit) return HIGH;
  7e:	f0 e0       	ldi	r31, 0x00	; 0
  80:	ee 0f       	add	r30, r30
  82:	ff 1f       	adc	r31, r31
  84:	e2 5e       	subi	r30, 0xE2	; 226
  86:	ff 4f       	sbci	r31, 0xFF	; 255
  88:	a5 91       	lpm	r26, Z+
  8a:	b4 91       	lpm	r27, Z
  8c:	ec 91       	ld	r30, X
  8e:	e2 23       	and	r30, r18
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	21 f4       	brne	.+8      	; 0x9e <digitalRead+0x36>
  96:	80 e0       	ldi	r24, 0x00	; 0
  98:	08 95       	ret
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:172
  if (pin&128) {pin=analogInputToDigitalPin((pin&127));}
  //uint8_t timer = digitalPinToTimer(pin);
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);

  if (port == NOT_A_PIN) return LOW;
  9a:	80 e0       	ldi	r24, 0x00	; 0
  9c:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:182
  // stage for auto-fast-digitalRead() for compile time known pins.
  // if (timer != NOT_ON_TIMER) turnOffPWM(timer);

  if (*portInputRegister(port) & bit) return HIGH;
  return LOW;
}
  9e:	08 95       	ret

000000a0 <__vector_5>:
__vector_5():
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:308
      #error "cannot find Millis() timer overflow vector"
    #endif
  #else
    #error "Millis() timer not defined!"
  #endif
  {
  a0:	1f 92       	push	r1
  a2:	0f 92       	push	r0
  a4:	0f b6       	in	r0, 0x3f	; 63
  a6:	0f 92       	push	r0
  a8:	11 24       	eor	r1, r1
  aa:	2f 93       	push	r18
  ac:	3f 93       	push	r19
  ae:	8f 93       	push	r24
  b0:	9f 93       	push	r25
  b2:	af 93       	push	r26
  b4:	bf 93       	push	r27
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:311
    // copy these to local variables so they can be stored in registers
    // (volatile variables must be read from memory on every access)
    unsigned long m = millis_timer_millis;
  b6:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <millis_timer_millis>
  ba:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <millis_timer_millis+0x1>
  be:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <millis_timer_millis+0x2>
  c2:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <millis_timer_millis+0x3>
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:312
    unsigned char f = millis_timer_fract;
  c6:	30 91 64 00 	lds	r19, 0x0064	; 0x800064 <millis_timer_fract>
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:319
    static unsigned char correct_exact = 0;     // rollover intended
    if (++correct_exact < CORRECT_EXACT_MANY) {
      ++f;
    }
#endif
    f += FRACT_INC;
  ca:	26 e0       	ldi	r18, 0x06	; 6
  cc:	23 0f       	add	r18, r19
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:321

    if (f >= FRACT_MAX)
  ce:	2d 37       	cpi	r18, 0x7D	; 125
  d0:	68 f1       	brcs	.+90     	; 0x12c <__vector_5+0x8c>
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:323
    {
      f -= FRACT_MAX;
  d2:	29 e8       	ldi	r18, 0x89	; 137
  d4:	23 0f       	add	r18, r19
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:324
      m += MILLIS_INC + 1;
  d6:	03 96       	adiw	r24, 0x03	; 3
  d8:	a1 1d       	adc	r26, r1
  da:	b1 1d       	adc	r27, r1
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:331
    else
    {
      m += MILLIS_INC;
    }

    millis_timer_fract = f;
  dc:	20 93 64 00 	sts	0x0064, r18	; 0x800064 <millis_timer_fract>
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:332
    millis_timer_millis = m;
  e0:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <millis_timer_millis>
  e4:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <millis_timer_millis+0x1>
  e8:	a0 93 67 00 	sts	0x0067, r26	; 0x800067 <millis_timer_millis+0x2>
  ec:	b0 93 68 00 	sts	0x0068, r27	; 0x800068 <millis_timer_millis+0x3>
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:334
#ifndef CORRECT_EXACT_MICROS
    millis_timer_overflow_count++;
  f0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  f4:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
  f8:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
  fc:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 100:	01 96       	adiw	r24, 0x01	; 1
 102:	a1 1d       	adc	r26, r1
 104:	b1 1d       	adc	r27, r1
 106:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 10a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 10e:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 112:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:336
#endif
  }
 116:	bf 91       	pop	r27
 118:	af 91       	pop	r26
 11a:	9f 91       	pop	r25
 11c:	8f 91       	pop	r24
 11e:	3f 91       	pop	r19
 120:	2f 91       	pop	r18
 122:	0f 90       	pop	r0
 124:	0f be       	out	0x3f, r0	; 63
 126:	0f 90       	pop	r0
 128:	1f 90       	pop	r1
 12a:	18 95       	reti
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:328
      f -= FRACT_MAX;
      m += MILLIS_INC + 1;
    }
    else
    {
      m += MILLIS_INC;
 12c:	02 96       	adiw	r24, 0x02	; 2
 12e:	a1 1d       	adc	r26, r1
 130:	b1 1d       	adc	r27, r1
 132:	d4 cf       	rjmp	.-88     	; 0xdc <__vector_5+0x3c>

00000134 <main>:
main():
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:1138
*/

  // Use the Millis Timer for fast PWM (unless it doesn't have an output).
  #if (TIMER_TO_USE_FOR_MILLIS == 0)
    #if defined(WGM01) // if Timer0 has PWM
      TCCR0A = (1<<WGM01) | (1<<WGM00);
 134:	83 e0       	ldi	r24, 0x03	; 3
 136:	8a bd       	out	0x2a, r24	; 42
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:1141
    #endif
    #if defined(TCCR0B) //The x61 has a wacky Timer0!
      TCCR0B = (MillisTimer_Prescale_Index << CS00);
 138:	83 bf       	out	0x33, r24	; 51
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:1162
    TCCR1A = 1<<WGM10;
    TCCR1B = (1<<WGM12) | (MillisTimer_Prescale_Index << CS10);
  #endif

  // this needs to be called before setup() or some functions won't work there
  sei();
 13a:	78 94       	sei
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:1167

  #ifndef DISABLEMILLIS
    // Enable the overflow interrupt (this is the basic system tic-toc for millis)
    #if defined(TIMSK) && defined(TOIE0) && (TIMER_TO_USE_FOR_MILLIS == 0)
      sbi(TIMSK, TOIE0);
 13c:	89 b7       	in	r24, 0x39	; 57
 13e:	82 60       	ori	r24, 0x02	; 2
 140:	89 bf       	out	0x39, r24	; 57
initToneTimerInternal():
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:958
    #elif defined(__AVR_ATtiny43__)
      TCCR1A = 3; //WGM 10=1, WGM11=1
      TCCR1B = 3; //prescaler of 64
    #elif (TIMER_TO_USE_FOR_TONE == 1) && defined(TCCR1) // ATtiny x5
      // Use the Tone Timer for fast PWM as phase correct not supported by this timer
      GTCCR = (1<<PWM1B);
 142:	80 e4       	ldi	r24, 0x40	; 64
 144:	8c bd       	out	0x2c, r24	; 44
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:959
      OCR1C = 0xFF; //Use 255 as the top to match with the others as this module doesn't have a 8bit PWM mode.
 146:	8f ef       	ldi	r24, 0xFF	; 255
 148:	8d bd       	out	0x2d, r24	; 45
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:960
      TCCR1 = (1<<CTC1) | (1<<PWM1A) | (ToneTimer_Prescale_Index << CS10);
 14a:	87 ec       	ldi	r24, 0xC7	; 199
 14c:	80 bf       	out	0x30, r24	; 48
main():
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:1214
  #if defined( INITIALIZE_ANALOG_TO_DIGITAL_CONVERTER ) && INITIALIZE_ANALOG_TO_DIGITAL_CONVERTER
    #if defined(ADCSRA)
      // set a2d prescale factor
      // ADCSRA = (ADCSRA & ~((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0))) | (ADC_ARDUINO_PRESCALER << ADPS0) | (1<<ADEN);
      // dude, this is being called on startup. We know that ADCSRA is 0! Why add a RMW cycle?!
      ADCSRA = (ADC_ARDUINO_PRESCALER << ADPS0) | (1<<ADEN);
 14e:	86 e8       	ldi	r24, 0x86	; 134
 150:	86 b9       	out	0x06, r24	; 6
pinMode():
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:57
                cli();
    *reg &= ~bit;
    *out |= bit;
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
 152:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:58
                cli();
 154:	f8 94       	cli
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:59
    *reg |= bit;
 156:	bb 9a       	sbi	0x17, 3	; 23
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:60
    SREG = oldSREG;
 158:	8f bf       	out	0x3f, r24	; 63
setup():
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:11
unsigned long ledOffTime = 0;
const unsigned long debounceDelay = 0; // Debounce time in milliseconds

void setup() {
  pinMode(ledPin, OUTPUT);      // Set the LED pin as output
  digitalWrite(ledPin, HIGH);
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	7a df       	rcall	.-268    	; 0x52 <digitalWrite.constprop.0>
pinMode():
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:51
                cli();
    *reg &= ~bit;
    *out &= ~bit;
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    uint8_t oldSREG = SREG;
 15e:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:52
                cli();
 160:	f8 94       	cli
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:53
    *reg &= ~bit;
 162:	bc 98       	cbi	0x17, 4	; 23
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:54
    *out |= bit;
 164:	c4 9a       	sbi	0x18, 4	; 24
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring_digital.c:55
    SREG = oldSREG;
 166:	8f bf       	out	0x3f, r24	; 63
setup():
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:13
  pinMode(inputPin, INPUT_PULLUP); // Set the input pin as input with pull-up resistor
  lastInputState = digitalRead(inputPin);
 168:	84 e0       	ldi	r24, 0x04	; 4
 16a:	7e df       	rcall	.-260    	; 0x68 <digitalRead>
 16c:	21 e0       	ldi	r18, 0x01	; 1
 16e:	89 2b       	or	r24, r25
 170:	09 f4       	brne	.+2      	; 0x174 <main+0x40>
 172:	20 e0       	ldi	r18, 0x00	; 0
 174:	20 93 6d 00 	sts	0x006D, r18	; 0x80006d <lastInputState>
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:14
  lastReadState = lastInputState;
 178:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <lastReadState>
loop():
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:18
}

void loop() {
  bool currentReadState = digitalRead(inputPin);
 17c:	84 e0       	ldi	r24, 0x04	; 4
 17e:	74 df       	rcall	.-280    	; 0x68 <digitalRead>
 180:	21 e0       	ldi	r18, 0x01	; 1
 182:	89 2b       	or	r24, r25
 184:	09 f4       	brne	.+2      	; 0x188 <main+0x54>
 186:	20 e0       	ldi	r18, 0x00	; 0
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:21

  // Check if the read state is different from the last read state
  if (currentReadState != lastReadState) {
 188:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <lastReadState>
 18c:	28 13       	cpse	r18, r24
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:22
    lastReadState = currentReadState; // Update the last read state
 18e:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <lastReadState>
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:26
  }

  // Check if the stable input state is different from the last stable state
  if (currentReadState != lastInputState) {
 192:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <lastInputState>
 196:	28 17       	cp	r18, r24
 198:	d1 f0       	breq	.+52     	; 0x1ce <main+0x9a>
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:27
    lastInputState = currentReadState; // Update the last stable input state
 19a:	20 93 6d 00 	sts	0x006D, r18	; 0x80006d <lastInputState>
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:30

    // Edge detected
    digitalWrite(ledPin, LOW); // Turn on the LED
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	58 df       	rcall	.-336    	; 0x52 <digitalWrite.constprop.0>
millis():
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:341
  }

  unsigned long millis()
  {
    unsigned long m;
    uint8_t oldSREG = SREG;
 1a2:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:345

    // disable interrupts while we read millis_timer_millis or we might get an
    // inconsistent value (e.g. in the middle of a write to millis_timer_millis)
    cli();
 1a4:	f8 94       	cli
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:346
    m = millis_timer_millis;
 1a6:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <millis_timer_millis>
 1aa:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <millis_timer_millis+0x1>
 1ae:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <millis_timer_millis+0x2>
 1b2:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <millis_timer_millis+0x3>
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:347
    SREG = oldSREG;
 1b6:	2f bf       	out	0x3f, r18	; 63
loop():
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:31
    ledOffTime = millis() + 50; // Set the time to turn off LED
 1b8:	c2 96       	adiw	r24, 0x32	; 50
 1ba:	a1 1d       	adc	r26, r1
 1bc:	b1 1d       	adc	r27, r1
 1be:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <ledOffTime>
 1c2:	90 93 6a 00 	sts	0x006A, r25	; 0x80006a <ledOffTime+0x1>
 1c6:	a0 93 6b 00 	sts	0x006B, r26	; 0x80006b <ledOffTime+0x2>
 1ca:	b0 93 6c 00 	sts	0x006C, r27	; 0x80006c <ledOffTime+0x3>
millis():
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:341
  }

  unsigned long millis()
  {
    unsigned long m;
    uint8_t oldSREG = SREG;
 1ce:	2f b7       	in	r18, 0x3f	; 63
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:345

    // disable interrupts while we read millis_timer_millis or we might get an
    // inconsistent value (e.g. in the middle of a write to millis_timer_millis)
    cli();
 1d0:	f8 94       	cli
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:346
    m = millis_timer_millis;
 1d2:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <millis_timer_millis>
 1d6:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <millis_timer_millis+0x1>
 1da:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <millis_timer_millis+0x2>
 1de:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <millis_timer_millis+0x3>
C:\Users\Lenovo L14\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.5.2\cores\tiny/wiring.c:347
    SREG = oldSREG;
 1e2:	2f bf       	out	0x3f, r18	; 63
loop():
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:35
  }

  // Turn off the LED after the delay
  if (millis() >= ledOffTime && digitalRead(ledPin) == LOW) {
 1e4:	40 91 69 00 	lds	r20, 0x0069	; 0x800069 <ledOffTime>
 1e8:	50 91 6a 00 	lds	r21, 0x006A	; 0x80006a <ledOffTime+0x1>
 1ec:	60 91 6b 00 	lds	r22, 0x006B	; 0x80006b <ledOffTime+0x2>
 1f0:	70 91 6c 00 	lds	r23, 0x006C	; 0x80006c <ledOffTime+0x3>
 1f4:	84 17       	cp	r24, r20
 1f6:	95 07       	cpc	r25, r21
 1f8:	a6 07       	cpc	r26, r22
 1fa:	b7 07       	cpc	r27, r23
 1fc:	08 f4       	brcc	.+2      	; 0x200 <main+0xcc>
 1fe:	be cf       	rjmp	.-132    	; 0x17c <main+0x48>
 200:	83 e0       	ldi	r24, 0x03	; 3
 202:	32 df       	rcall	.-412    	; 0x68 <digitalRead>
 204:	89 2b       	or	r24, r25
 206:	09 f0       	breq	.+2      	; 0x20a <main+0xd6>
 208:	b9 cf       	rjmp	.-142    	; 0x17c <main+0x48>
C:\Users\Lenovo L14\Documents\KiCad-Projects\BBCWinchesterPro\ATTinyCode/ATTinyCode.ino:36
    digitalWrite(ledPin, HIGH);
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	22 df       	rcall	.-444    	; 0x52 <digitalWrite.constprop.0>
 20e:	b6 cf       	rjmp	.-148    	; 0x17c <main+0x48>

00000210 <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
 210:	f8 94       	cli

00000212 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
 212:	ff cf       	rjmp	.-2      	; 0x212 <__stop_program>
